import random
from config import gen

class QuickResponseSystem:
    def __init__(self):
        # ุฑุฏูุฏ ุงูุชุฑุญูุจ ุงูุณุฑูุนุฉ
        self.welcome_patterns = {
            'ุณูุงู': True, 'ุงูุณูุงู': True, 'ุนูููู': True,
            'ูุฑุญุจุง': True, 'ูุฑุญุจุชูู': True, 'ููุง': True, 'ุงููุง': True,
            'ูููู': True, 'ููู ุงูุญุงู': True, 'ุดูููู': True, 'ูุด ุงุฎุจุงุฑู': True,
            'ุตุจุงุญ': True, 'ูุณุงุก': True, 'ุงูููู': True, 'ุญูุงู': True, 'ุญูุงูู': True,
            'ูุนุทูู ุงูุนุงููุฉ': True, 'ุชุณูู': True, 'ุงููู ูุนุทูู ุงูุนุงููุฉ': True,
            'ูุงู': True, 'ูุงูู': True, 'hello': True, 'hi': True,
            'good morning': True, 'good evening': True,
            'ุงูุด ุงุฎุจุงุฑู': True, 'ูุด ูุณูู': True, 'ููู ุงููุฑู': True
        }
        
        # ูููุงุช ูุนุจุงุฑุงุช ุงูุดูุฑ ุจุงููุฌุฉ ุงูุณุนูุฏูุฉ
        self.thanks_patterns = {
            'ุดูุฑุง': True, 'ุดูุฑุงู': True, 'ุดูุฑ': True, 'ูุดููุฑ': True, 'ูุดููุฑู': True,
            'ุชุณูู': True, 'ุชุณููู': True, 'ุชุณูููู': True, 'ุชุณูููู': True,
            'ูุนุทูู': True, 'ูุนุทููู': True, 'ุงููู ูุนุทูู': True, 'ุงููู ูุนุทููู': True,
            'ุงูุนุงููุฉ': True, 'ูุนุทูู ุงูุนุงููุฉ': True, 'ุงููู ูุนุทูู ุงูุนุงููุฉ': True,
            'ุฌุฒุงู': True, 'ุฌุฒุงูู': True, 'ุฌุฒุงู ุงููู': True, 'ุฌุฒุงูู ุงููู': True,
            'ุฎูุฑุงู': True, 'ุฎูุฑ': True, 'ุฌุฒุงู ุงููู ุฎูุฑ': True, 'ุฌุฒุงู ุงููู ุฎูุฑุง': True,
            'ูุงูุตุฑุช': True, 'ูุงูุตุฑุชูุง': True, 'ูุง ูุตุฑุช': True, 'ูุง ูุตุฑุชูุง': True,
            'ูุดููุฑูู': True, 'ูุดููุฑุงุช': True, 'thank': True, 'thanks': True,
            'appreciate': True, 'ุจุงุฑู': True, 'ุจุงุฑู ุงููู': True, 'ุงููู ูุจุงุฑู': True,
            'ูููู': True, 'ููููู': True, 'ุงููู ููููู': True, 'ุงููู ูููููู': True,
            'ูุซุฑ ุฎูุฑู': True, 'ูุซุฑ ุฎูุฑูู': True, 'ุงููู ููุซุฑ ุฎูุฑู': True, 
            'ุฎูุงุต': True, 'ููุงูู': True, 'ูุงูู': True, 'ุจุณ ูุฐุง': True,
            'ุชูุงู': True, 'ุฒูู': True, 'ููุชุงุฒ': True, 'perfect': True
        }
        
        # ุฌูู ูุงููุฉ ููุดูุฑ ุจุงููุฌุฉ ุงูุณุนูุฏูุฉ
        self.thanks_phrases = [
            'ุดูุฑุง ูู', 'ุดูุฑุง ููู', 'ุดูุฑุงู ูู', 'ุดูุฑุงู ููู',
            'ุงููู ูุนุทูู ุงูุนุงููุฉ', 'ูุนุทูู ุงูุนุงููุฉ', 'ุงููู ูุนุทููู ุงูุนุงููุฉ',
            'ุชุณูู ุฅูุฏู', 'ุชุณูู ุงูุฏู', 'ุชุณููู ุฅูุฏู', 'ุชุณููู ุงูุฏู',
            'ุฌุฒุงู ุงููู ุฎูุฑ', 'ุฌุฒุงู ุงููู ุฎูุฑุง', 'ุฌุฒุงู ุงููู ุฎูุฑุงู',
            'ุงููู ูุฌุฒุงู ุฎูุฑ', 'ุงููู ูุฌุฒูู ุฎูุฑ', 'ุงููู ูุฌุฒููู ุฎูุฑ',
            'ูุง ูุตุฑุช', 'ูุงูุตุฑุช', 'ูุง ูุตุฑุชูุง', 'ูุงูุตุฑุชูุง',
            'ูุซุฑ ุฎูุฑู', 'ุงููู ููุซุฑ ุฎูุฑู', 'ูุซุฑ ุฎูุฑูู',
            'ุงููู ููููู', 'ุงููู ูููููู', 'ูููู ุงููู', 'ููููู ุงููู',
            'ุจุงุฑู ุงููู ููู', 'ุจุงุฑู ุงููู ูููู', 'ุงููู ูุจุงุฑู ููู',
            'ุดูุฑุง ุนูู ุงููุณุงุนุฏุฉ', 'ุดูุฑุง ุนูู ุงููุณุงุนุฏู', 'ุดูุฑุงู ุนูู ุงููุณุงุนุฏุฉ',
            'thanks a lot', 'thank you', 'thank u', 'appreciate it',
            'ูุดููุฑูู ูุงููู', 'ูุดููุฑ ูุงููู', 'ุชุณูู ูุงููู'
        ]
        
        # ูููุงุช ุฏูุงููุฉ ููุฃุณุนุงุฑ - ูุญุณููุฉ
        self.price_keywords = [
            'ุณุนุฑ', 'ุงุณุนุงุฑ', 'ุฃุณุนุงุฑ', 'ุชูููุฉ', 'ูููุฉ', 'ุชูุงููู','ุงุณุนุงุฑูู',
            'ูููุณ', 'ุฑูุงู', 'ูุจูุบ', 'ุฑุณูู','ุนุฑูุถูู',
            'ุนุฑุถ', 'ุนุฑูุถ', 'ุจุงูุฉ', 'ุจุงูุงุช', 'ุฎุตู', 'ุฎุตููุงุช','ุฎุตููุงุชูู',
            'ุซูู', 'ูุตุงุฑูู', 'ูุตุฑูู', 'ุฏูุน', 'ูููู', 'ุชููู', 'ุจูุงู'
        ]
        
        # ุฌูู ูุงููุฉ ููุฃุณุนุงุฑ
        self.price_phrases = [
            'ูู ุงูุณุนุฑ', 'ุงูุด ุงูุณุนุฑ', 'ูุด ุงูุณุนุฑ', 'ูู ุงูุชูููุฉ','ุงูุด ุงุณุนุงุฑูู','ุงูุด ุงุณุนุงุฑูู',
            'ูุด ุงูุชูููุฉ', 'ูู ุงููููุฉ', 'ุงูุด ุงููููุฉ', 'ูุด ุงููููุฉ',
            'ูู ุงูุชูุงููู', 'ุงูุด ุงูุชูุงููู', 'ูุด ุงูุชูุงููู',   
            'ูู ุงูุซูู', 'ุงุจุบู ุงุนุฑู ุงูุณุนุฑ',
            'ุนุงูุฒ ุงุนุฑู ุงูุณุนุฑ', 'ุงูู ุงูุงุณุนุงุฑ', 'ูุด ุงูุงุณุนุงุฑ',
            'ุฑุณูู ุงูุงุณุชูุฏุงู', 'ุงุณุนุงุฑ ุงูุงุณุชูุฏุงู', 'ุชูููุฉ ุงูุงุณุชูุฏุงู',
        ]
    
    def is_greeting_message(self, message: str) -> bool:
        """ูุญุต ุณุฑูุน ููุฑุณุงุฆู ุงูุชุฑุญูุจูุฉ"""
        if not message or len(message.strip()) == 0:
            return False
            
        message_clean = message.lower().strip()
        words = message_clean.split()
        
        # ุฅุฐุง ุงูุฑุณุงูุฉ ูุตูุฑุฉ ูุชุญุชูู ุนูู ุชุฑุญูุจ
        if len(words) <= 6:
            for word in words:
                clean_word = ''.join(c for c in word if c.isalnum() or c in 'ุฃุงุจุชุซุฌุญุฎุฏุฐุฑุฒุณุดุตุถุทุธุนุบููููููููููุกุขุฅ')
                if clean_word in self.welcome_patterns:
                    return True
                    
        return False
    
    def is_thanks_message(self, message: str) -> bool:
        """ูุญุต ุณุฑูุน ูุฏููู ูุฑุณุงุฆู ุงูุดูุฑ ุจุงููุฌุฉ ุงูุณุนูุฏูุฉ"""
        if not message or len(message.strip()) == 0:
            return False
            
        message_clean = message.lower().strip()
        
        # ูุญุต ุงูุฌูู ุงููุงููุฉ ุฃููุงู
        for phrase in self.thanks_phrases:
            if phrase in message_clean:
                return True
        
        # ูุญุต ุงููููุงุช ุงูููุฑุฏุฉ
        words = message_clean.split()
        thanks_word_count = 0
        
        for word in words:
            clean_word = ''.join(c for c in word if c.isalnum() or c in 'ุฃุงุจุชุซุฌุญุฎุฏุฐุฑุฒุณุดุตุถุทุธุนุบููููููููููุกุขุฅ')
            
            if clean_word in self.thanks_patterns:
                thanks_word_count += 1
        
        # ุฅุฐุง ูุฌุฏ ูููุฉ ูุงุญุฏุฉ ุฃู ุฃูุซุฑ ุชุฏู ุนูู ุงูุดูุฑ
        return thanks_word_count >= 1
    
    def is_price_inquiry(self, message: str) -> bool:
        """ูุญุต ุณุฑูุน ูุฏููู ููุณุคุงู ุนู ุงูุฃุณุนุงุฑ"""
        if not message or len(message.strip()) == 0:
            return False
            
        message_clean = message.lower().strip()
        
        # ูุญุต ุงูุฌูู ุงููุงููุฉ ุฃููุงู
        for phrase in self.price_phrases:
            if phrase in message_clean:
                return True
        
        # ูุญุต ุงููููุงุช ุงูููุฑุฏุฉ
        words = message_clean.split()
        price_word_count = 0
        
        for word in words:
            clean_word = ''.join(c for c in word if c.isalnum() or c in 'ุฃุงุจุชุซุฌุญุฎุฏุฐุฑุฒุณุดุตุถุทุธุนุบููููููููููุกุขุฅ')
            
            if clean_word in self.price_keywords:
                price_word_count += 1
        
        # ุฅุฐุง ูุฌุฏ ูููุฉ ูุงุญุฏุฉ ุฃู ุฃูุซุฑ ุชุฏู ุนูู ุงูุณุนุฑ
        return price_word_count >= 1
    
    def get_welcome_response(self, customer_name: str = None) -> str:
        """ุฑุฏ ุงูุชุฑุญูุจ ุงูุณุฑูุน (ูุน ุงูุชุฎุตูุต ููุนููุงุก ุงููุณุฌููู)"""
        if customer_name and gen:
            return f"""ุฃููุงู ูุณููุงู ุฃุฎุชูุง {customer_name} ุงููุฑููุฉ ูุฑุฉ ุซุงููุฉ ๐

ุญูุงู ุงููู ูุฑุฉ ุซุงููุฉ ูู ููุชุจ ุงูุฑูุงุฆุฒ ุงูุจุดุฑูุฉ ููุงุณุชูุฏุงู

ููู ูููููู ูุณุงุนุฏุชู ุงููููุ ๐"""
        elif customer_name and not gen:
             return f"""ุฃููุงู ูุณููุงู ุฃุฎููุง {customer_name} ุงููุฑูู ูุฑุฉ ุซุงููุฉ ๐

ุญูุงู ุงููู ูุฑุฉ ุซุงููุฉ ูู ููุชุจ ุงูุฑูุงุฆุฒ ุงูุจุดุฑูุฉ ููุงุณุชูุฏุงู

ููู ูููููู ูุณุงุนุฏุชู ุงููููุ ๐"""        
        
        return """ุฃููุงู ูุณููุงู ุจู ูู ููุชุจ ุงูุฑูุงุฆุฒ ุงูุจุดุฑูุฉ ููุงุณุชูุฏุงู ๐

ูุญู ููุง ูุฎุฏูุชู ููุณุงุนุฏุชู ูู ุฌููุน ุงุญุชูุงุฌุงุชู ูู ุงูุนูุงูุฉ ุงูููุฒููุฉ ุงููุฏุฑุจุฉ ูุงููุคููุฉ.

ููู ูููููู ูุณุงุนุฏุชู ุงููููุ ๐"""

    def get_thanks_response(self, customer_name: str = None) -> str:
        """ุฑุฏ ุงูุดูุฑ ุงูุณุฑูุน ุจุงููุฌุฉ ุงูุณุนูุฏูุฉ (ูุน ุงูุชุฎุตูุต)"""
        if customer_name and not gen:
            responses = [
                f"""ุงูุนูู ุฃุฎููุง {customer_name} ุงููุฑูู ๐

ุงููู ูุนุทูู ุงูุนุงููุฉ.. ูุญู ูู ุฎุฏูุชู ุฏุงุฆูุงู ูู ููุชุจ ุงูุฑูุงุฆุฒ ุงูุจุดุฑูุฉ

ูู ุชุญุชุงุฌ ุฃู ูุณุงุนุฏุฉ ุฃุฎุฑูุ ๐""",
                
                f"""ุฃููุงู ูุณููุงู ุฃุฎููุง {customer_name}.. ูุฐุง ูุงุฌุจูุง ๐ค

ูุญู ุณุนุฏุงุก ุจุฎุฏูุชู ูู ููุชุจ ุงูุฑูุงุฆุฒ ุงูุจุดุฑูุฉ ููุงุณุชูุฏุงู

ุงููู ููููู.. ููุง ุชุชุฑุฏุฏ ูู ุงูุชูุงุตู ูุนูุง ูุชู ุดุฆุช! ๐""",
                
                f"""ุญูุงู ุงููู ุฃุฎููุง {customer_name}.. ูุง ูุตุฑูุง ุดู ๐

ุฎุฏูุชู ุดุฑู ููุง ูู ููุชุจ ุงูุฑูุงุฆุฒ ุงูุจุดุฑูุฉ

ุชูุงุตู ูุนูุง ูู ุฃู ููุช.. ูุญู ููุง ูุฎุฏูุชู! ๐"""
            ]
        elif customer_name and gen:
            responses = [
                f"""ุงูุนูู ุฃุฎุชูุง {customer_name} ุงููุฑููุฉ ๐

ุงููู ูุนุทูู ุงูุนุงููุฉ.. ูุญู ูู ุฎุฏูุชู ุฏุงุฆูุงู ูู ููุชุจ ุงูุฑูุงุฆุฒ ุงูุจุดุฑูุฉ

ูู ุชุญุชุงุฌูู ุฃู ูุณุงุนุฏุฉ ุฃุฎุฑูุ ๐""",
                
                f"""ุฃููุงู ูุณููุงู ุฃุฎุชูุง {customer_name}.. ูุฐุง ูุงุฌุจูุง ๐ค

ูุญู ุณุนุฏุงุก ุจุฎุฏูุชู ูู ููุชุจ ุงูุฑูุงุฆุฒ ุงูุจุดุฑูุฉ ููุงุณุชูุฏุงู

ุงููู ููููู.. ููุง ุชุชุฑุฏุฏู ูู ุงูุชูุงุตู ูุนูุง ูุชู ุดุฆุชู! ๐""",
                
                f"""ุญูุงู ุงููู ุฃุฎุชูุง {customer_name}.. ูุง ูุตุฑูุง ุดู ๐

ุฎุฏูุชู ุดุฑู ููุง ูู ููุชุจ ุงูุฑูุงุฆุฒ ุงูุจุดุฑูุฉ

ุชูุงุตูู ูุนูุง ูู ุฃู ููุช.. ูุญู ููุง ูุฎุฏูุชู! ๐"""
            ]
        else:
            responses = [
                """ุงูุนูู ุนููููุง ุงูุนุฒูุฒ ๐

ุงููู ูุนุทูู ุงูุนุงููุฉ.. ูุญู ูู ุฎุฏูุชู ุฏุงุฆูุงู ูู ููุชุจ ุงูุฑูุงุฆุฒ ุงูุจุดุฑูุฉ

ูู ุชุญุชุงุฌ ุฃู ูุณุงุนุฏุฉ ุฃุฎุฑูุ ๐""",
                
                """ุฃููุงู ูุณููุงู.. ูุฐุง ูุงุฌุจูุง ๐ค

ูุญู ุณุนุฏุงุก ุจุฎุฏูุชู ูู ููุชุจ ุงูุฑูุงุฆุฒ ุงูุจุดุฑูุฉ ููุงุณุชูุฏุงู

ุงููู ููููู.. ููุง ุชุชุฑุฏุฏ ูู ุงูุชูุงุตู ูุนูุง ูุชู ุดุฆุช! ๐""",
                
                """ุญูุงู ุงููู.. ูุง ูุตุฑูุง ุดู ๐

ุฎุฏูุชู ุดุฑู ููุง ูู ููุชุจ ุงูุฑูุงุฆุฒ ุงูุจุดุฑูุฉ

ุชูุงุตู ูุนูุง ูู ุฃู ููุช.. ูุญู ููุง ูุฎุฏูุชู! ๐"""
            ]
        
        return random.choice(responses)

    def get_price_response(self) -> tuple:
        """ุฑุฏ ุงูุฃุณุนุงุฑ ุงููุฎุชุตุฑ ูุน ุงูุตูุฑุฉ"""
        text_response = """ุฅููู ุนุฑูุถูุง ุงูุญุงููุฉ ููุนูุงูุฉ ุงูููุฒููุฉ ุงููุฏุฑุจุฉ ๐ผ

๐ ุนุฑุถ ุฎุงุต ุจููุงุณุจุฉ ุงูููู ุงููุทูู ุงูุณุนูุฏู 95

ููุงุณุชูุณุงุฑ ูุงูุญุฌุฒ ุงุชุตู ุจูุง:
๐ 0556914447 / 0506207444 / 0537914445"""
        
        # ุถุน ุฑุงุจุท ุตูุฑุชู ููุง ุจุนุฏ ุฑูุนูุง
        image_url = "https://i.imghippo.com/files/La2232xjc.jpg"  # ุงุณุชุจุฏู ุจุฑุงุจุท ุตูุฑุชู
        
        return text_response, image_url